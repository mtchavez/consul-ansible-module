---

- hosts: 127.0.0.1
  connection: local
  gather_facts: False
  become_user: sudo
  vars_files:
    - group_vars/consul

  tasks:

    - name: Create ACL with defaults
      consul_acl:
        action: create
        token: "{{ consul_acl_master_token }}"
      register: new_acl_defaults
      tags:
        - acl

    - name: Validate ACL create returns ID
      fail:
        msg: "Create did not return an ID: {{ new_acl_defaults.value }}"
      when: not new_acl_defaults.value.ID
      tags:
        - acl

    - name: Debug new acl with defaults
      debug:
        var: new_acl_defaults
      when: new_acl_defaults is defined
      tags:
        - acl

    - name: Update ACL
      consul_acl:
        action: update
        acl_id: "{{ new_acl_defaults.value.ID }}"
        name: "updated-acl"
        token: "{{ consul_acl_master_token }}"
      register: updated_acl
      tags:
        - acl

    - name: Debug updated ACL
      debug:
        var: updated_acl
      tags:
        - acl

    - name: Validate updated ACL
      fail:
        msg: "Updated ACL ID is not the same as requested ID"
      when: updated_acl.value.ID != new_acl_defaults.value.ID
      tags:
        - acl

    - name: List ACL with master token
      consul_acl:
        action: list
        token: "{{ consul_acl_master_token }}"
      register: acl_list
      tags:
        - acl

    - name: Validate ACL list
      fail:
        msg: "ACL list should have items"
      when: acl_list.value|length|int == 0
      tags:
        - acl

    - name: Get ACL replication
      consul_acl:
        action: replication
        token: "{{ consul_acl_master_token }}"
      register: acl_replication
      tags:
        - acl

    - name: Validate ACL replication datacenter is empty when off
      fail:
        msg: "ACL list should have items"
      when: acl_replication.value.Enabled|bool == False and acl_replication.value.SourceDatacenter != ""
      tags:
        - acl

    - name: Get ACL info
      consul_acl:
        action: info
        acl_id: "{{ new_acl_defaults.value.ID }}"
        token: "{{ consul_acl_master_token }}"
      register: acl_info
      tags:
        - acl

    - name: Validate ACL info length
      fail:
        msg: "ACL list should have at least 1 item"
      when: acl_info.value|length|int < 1
      tags:
        - acl

    - name: Validate ACL info ID
      fail:
        msg: "ACL list should have correct ID {{ new_acl_defaults.value.ID }}"
      when: acl_info.value[0].ID != new_acl_defaults.value.ID
      tags:
        - acl

    - name: Destroy ACL
      consul_acl:
        action: destroy
        acl_id: "{{ new_acl_defaults.value.ID }}"
        token: "{{ consul_acl_master_token }}"
      register: acl_deleted
      tags:
        - acl

    - name: Validate ACL deleted
      fail:
        msg: "ACL destroy should have succeeded"
      when: acl_deleted|failed
      tags:
        - acl
